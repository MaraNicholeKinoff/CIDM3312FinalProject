// <auto-generated />
using System;
using CIDM3312Project.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CIDM3312Project.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846");

            modelBuilder.Entity("CIDM3312Project.Models.Client", b =>
                {
                    b.Property<int>("ClientID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("ClientID");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("CIDM3312Project.Models.ClientOrganization", b =>
                {
                    b.Property<int>("ClientID");

                    b.Property<int>("OrganizationID");

                    b.HasKey("ClientID", "OrganizationID");

                    b.HasIndex("OrganizationID");

                    b.ToTable("ClientOrganization");
                });

            modelBuilder.Entity("CIDM3312Project.Models.Member", b =>
                {
                    b.Property<int>("MemberID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Major");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("MemberID");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("CIDM3312Project.Models.Organization", b =>
                {
                    b.Property<int>("OrganizationID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AddLine1");

                    b.Property<string>("AddLine2");

                    b.Property<string>("City");

                    b.Property<string>("Email");

                    b.Property<string>("OrganizationName");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("State");

                    b.Property<string>("Zipcode");

                    b.HasKey("OrganizationID");

                    b.ToTable("Organization");
                });

            modelBuilder.Entity("CIDM3312Project.Models.Project", b =>
                {
                    b.Property<int>("ProjectID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Deadline");

                    b.Property<int>("EstimatedHours");

                    b.Property<string>("ProjectName");

                    b.HasKey("ProjectID");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("CIDM3312Project.Models.ProjectDetails", b =>
                {
                    b.Property<int>("ClientID");

                    b.Property<int>("TeamID");

                    b.Property<int>("ProjectID");

                    b.HasKey("ClientID", "TeamID", "ProjectID");

                    b.HasIndex("ProjectID");

                    b.HasIndex("TeamID");

                    b.ToTable("ProjectDetails");
                });

            modelBuilder.Entity("CIDM3312Project.Models.Team", b =>
                {
                    b.Property<int>("TeamID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("TeamName");

                    b.HasKey("TeamID");

                    b.ToTable("Team");
                });

            modelBuilder.Entity("CIDM3312Project.Models.TeamMembers", b =>
                {
                    b.Property<int>("TeamID");

                    b.Property<int>("StudentID");

                    b.Property<int?>("MemberID");

                    b.Property<string>("Role");

                    b.HasKey("TeamID", "StudentID");

                    b.HasIndex("MemberID");

                    b.ToTable("TeamMembers");
                });

            modelBuilder.Entity("CIDM3312Project.Models.ClientOrganization", b =>
                {
                    b.HasOne("CIDM3312Project.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CIDM3312Project.Models.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CIDM3312Project.Models.ProjectDetails", b =>
                {
                    b.HasOne("CIDM3312Project.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CIDM3312Project.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CIDM3312Project.Models.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CIDM3312Project.Models.TeamMembers", b =>
                {
                    b.HasOne("CIDM3312Project.Models.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberID");

                    b.HasOne("CIDM3312Project.Models.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
